{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "b9d77e67-e54c-43df-a573-5e823861ed42",
   "metadata": {},
   "source": [
    "# Il primo notebook di microrobotica\n",
    "Questo è il primo esempio di notebook di jupyter visto in **5Arob**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "a06ce512-9569-42e4-b508-bec0937bcac6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4\n"
     ]
    }
   ],
   "source": [
    "a = 1\n",
    "b = 3\n",
    "print(a+b)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8a84ebe-c77d-4529-94b0-285c604d648f",
   "metadata": {},
   "source": [
    "**ATTENZIONE**: il name space di notebook è condiviso da tutte le sue celle, esempio:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "4a710f44-ed66-4803-8304-bc1f495ab244",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n"
     ]
    }
   ],
   "source": [
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "bcf2b3f8-0e1c-41e4-9c5a-1d4041cfc1e4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mario\n"
     ]
    }
   ],
   "source": [
    "print(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "f7478d49-6dbf-479c-ae77-cbfad0bf84cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "c = \"Mario\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "b1065cda-3574-4bd3-ad76-0740d6874ee0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Mario'"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c885381d-425b-43c1-895b-f0761ba74bd7",
   "metadata": {},
   "source": [
    "Scrivendo il nome di una variabile e eseguire esce il contenuto senza fare per forza print()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b6d6992-a9b5-4842-903a-b6e3125ba8a3",
   "metadata": {},
   "source": [
    "## Ripasso sui dizionari"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "77d7ebde-3650-4b56-a646-66349a30569a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "letter2number= {}\n",
    "number2letter = {}\n",
    "letters = \"abcdefghilmnopqrstuvz\"\n",
    "len(letters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "4f6d0420-e607-45b6-854f-d8588f5d779e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a\n",
      "b\n",
      "c\n",
      "d\n",
      "e\n",
      "f\n",
      "g\n",
      "h\n",
      "i\n",
      "l\n",
      "m\n",
      "n\n",
      "o\n",
      "p\n",
      "q\n",
      "r\n",
      "s\n",
      "t\n",
      "u\n",
      "v\n",
      "z\n"
     ]
    }
   ],
   "source": [
    "for letter in letters:\n",
    "    print(letter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "e473a7c7-5e78-47e7-bd1b-f2f2b0425a11",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 a\n",
      "1 b\n",
      "2 c\n",
      "3 d\n",
      "4 e\n",
      "5 f\n",
      "6 g\n",
      "7 h\n",
      "8 i\n",
      "9 l\n",
      "10 m\n",
      "11 n\n",
      "12 o\n",
      "13 p\n",
      "14 q\n",
      "15 r\n",
      "16 s\n",
      "17 t\n",
      "18 u\n",
      "19 v\n",
      "20 z\n"
     ]
    }
   ],
   "source": [
    "for number,letter in enumerate(letters):\n",
    "    print(number,letter)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "11b56c5c-4884-481b-a355-f9f013117260",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'l': 9, 'm': 10, 'n': 11, 'o': 12, 'p': 13, 'q': 14, 'r': 15, 's': 16, 't': 17, 'u': 18, 'v': 19, 'z': 20}\n",
      "{0: 'a', 1: 'b', 2: 'c', 3: 'd', 4: 'e', 5: 'f', 6: 'g', 7: 'h', 8: 'i', 9: 'l', 10: 'm', 11: 'n', 12: 'o', 13: 'p', 14: 'q', 15: 'r', 16: 's', 17: 't', 18: 'u', 19: 'v', 20: 'z'}\n"
     ]
    }
   ],
   "source": [
    "for number,letter in enumerate(letters):\n",
    "    letter2number[letter] = number\n",
    "    number2letter[number] = letter\n",
    "print(letter2number)\n",
    "print(number2letter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "232a2a82-6fe3-47fb-9f65-6e770f1e7135",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Scrivi una frase -> ciao, come va?\n"
     ]
    }
   ],
   "source": [
    "string = input(\"Scrivi una frase ->\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c02ec890-2064-41bb-889c-5e4a6b513e8d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'ciao, come va?'"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "string"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aa8c2aba-a59b-4386-b1f9-aa094838726b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
